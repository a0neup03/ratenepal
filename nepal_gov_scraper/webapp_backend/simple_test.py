#!/usr/bin/env python3
"""
Simple test to verify the Nepal Office Tracker backend works
"""

from fastapi import FastAPI
from fastapi.responses import JSONResponse
import uvicorn

# Simple FastAPI test app
app = FastAPI(title="Nepal Office Tracker - Test API")

@app.get("/")
async def root():
    return {
        "message": "ЁЯЗ│ЁЯЗ╡ Nepal Government Office Experience Tracker API",
        "status": "тЬЕ Backend is working!",
        "features": [
            "ЁЯУН District and office selection",
            "тП▒я╕П Timer-based visit tracking",
            "тнР 5-star rating system",
            "ЁЯУЭ Nepali feedback questions",
            "ЁЯУК Analytics dashboard"
        ],
        "workflow": {
            "1": "Select district (77 Nepal districts available)",
            "2": "Choose office type (DAO, Passport, Transport, etc.)",
            "3": "Pick specific office and service",
            "4": "ЁЯЪи Start timer (Red button)",
            "5": "End visit: рдХрд╛рдо рднрдпреЛ (Success) or рдХрд╛рдо рднрдПрди (Failed)",
            "6": "Rate experience and provide feedback"
        },
        "nepali_questions": [
            "рдШреБрд╕ рдорд╛рдЧреНрдпреЛ? (Did they ask for bribe?)",
            "рдХрд░реНрдордЪрд╛рд░реА рд╕рд╣рдпреЛрдЧреА рдерд┐рдП? (Were staff helpful?)",
            "рдкреНрд░рдХреНрд░рд┐рдпрд╛ рд╕реНрдкрд╖реНрдЯ рдерд┐рдпреЛ? (Was process clear?)"
        ]
    }

@app.get("/health")
async def health():
    return {"status": "healthy", "backend": "working"}

@app.get("/test/districts")
async def test_districts():
    """Test endpoint showing district selection"""
    return {
        "sample_provinces": {
            "Bagmati Province": ["Kathmandu", "Lalitpur", "Bhaktapur"],
            "Gandaki Province": ["Kaski", "Gorkha", "Lamjung"],
            "Koshi Province": ["Morang", "Jhapa", "Sunsari"]
        },
        "total_districts": 77,
        "total_provinces": 7
    }

@app.get("/test/office-types")
async def test_office_types():
    """Test endpoint showing office types"""
    return {
        "office_types": [
            {
                "type": "district_administration_office",
                "name": "District Administration Office (DAO)",
                "name_nepali": "рдЬрд┐рд▓реНрд▓рд╛ рдкреНрд░рд╢рд╛рд╕рди рдХрд╛рд░реНрдпрд╛рд▓рдп",
                "services": ["Citizenship Certificate", "Various permits"]
            },
            {
                "type": "passport_department", 
                "name": "Passport Department",
                "name_nepali": "рд░рд╛рд╣рджрд╛рдиреА рд╡рд┐рднрд╛рдЧ",
                "services": ["E-Passport Application"]
            },
            {
                "type": "transport_office",
                "name": "Transport Management Office", 
                "name_nepali": "рдпрд╛рддрд╛рдпрд╛рдд рд╡реНрдпрд╡рд╕реНрдерд╛рдкрди рдХрд╛рд░реНрдпрд╛рд▓рдп",
                "services": ["Driving License", "Vehicle Registration"]
            }
        ]
    }

@app.post("/test/timer")
async def test_timer():
    """Test endpoint for timer functionality"""
    return {
        "message": "ЁЯЪи Timer started!",
        "office": "District Administration Office, Kathmandu",
        "service": "Citizenship Certificate", 
        "visit_id": 12345,
        "start_time": "2025-09-08T20:25:00Z",
        "instructions": [
            "Wait for your service to complete",
            "Click 'рдХрд╛рдо рднрдпреЛ' if successful or 'рдХрд╛рдо рднрдПрди' if failed",
            "Provide ratings and feedback"
        ]
    }

@app.post("/test/rating")
async def test_rating():
    """Test endpoint for rating submission"""
    return {
        "message": "рдзрдиреНрдпрд╡рд╛рдж! рддрдкрд╛рдИрдВрдХреЛ рдлрд┐рдбрдмреНрдпрд╛рдХ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреЗрд╢ рдЧрд░рд┐рдпреЛред",
        "message_english": "Thank you! Your feedback has been submitted successfully.",
        "rating_received": {
            "overall_rating": 4,
            "staff_behavior": 5,
            "cleanliness": 3,
            "efficiency": 4,
            "information_clarity": 4
        },
        "nepali_feedback": {
            "asked_for_bribe": False,
            "staff_helpful": True,
            "process_clear": True,
            "would_recommend": True
        }
    }

if __name__ == "__main__":
    print("ЁЯЗ│ЁЯЗ╡ Nepal Government Office Experience Tracker - Backend Test")
    print("=" * 65)
    print("ЁЯЪА Starting test server...")
    print("ЁЯУН Test API: http://localhost:8000")
    print("ЁЯУЪ API Docs: http://localhost:8000/docs")
    print("=" * 65)
    
    uvicorn.run(app, host="0.0.0.0", port=8000, log_level="info")